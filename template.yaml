AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  verifyStravaWebhook:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-verifyStravaWebhook
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: verifyStravaWebhook
      CodeUri: src/verifyStravaWebhook
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
      Environment:
        Variables:
          VERIFY_TOKEN: STRAVA-VRACE
      Events:
        ApiGETvracewebhookstrava:
          Type: Api
          Properties:
            Path: /vrace/webhookstrava
            Method: GET
            RestApiId: !Ref Api
  dataEventFromStrava:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-dataEventFromStrava
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: dataEventFromStrava
      CodeUri: src/dataEventFromStrava
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref vraceEventStrava
      Environment:
        Variables:
          TABLE_NAME: !Ref vraceEventStrava
          TABLE_ARN: !GetAtt vraceEventStrava.Arn
      Events:
        ApiPOSTvracewebhookstrava:
          Type: Api
          Properties:
            Path: /vrace/webhookstrava
            Method: POST
            RestApiId: !Ref Api
  vraceEventStrava:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: object_id
          AttributeType: 'N'
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: object_id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${StackTagName} Environment ${EnvironmentTagName}
        - ResourceName: Api
      StageName: !Ref EnvironmentAPIGatewayStageName
      DefinitionBody:
        swagger: '2.0'
        info: {}
        paths:
          /vrace/webhookstrava:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${verifyStravaWebhook.Arn}/invocations
              responses: {}
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${dataEventFromStrava.Arn}/invocations
              responses: {}
          /vrace/exchangeAutorization:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${dataEventFromStrava.Arn}/invocations
              responses: {}
          /v1/infraction-reports/cancel:
            post:
              tags:
                - Cancelamento de relato de infração
              description: |
                Notifica o DICT com o cancelamento do relato de infração
              requestBody:
                description: |
                  Descrição dos campos para cancelamento de relato de infração
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/InfractionReportCancelRequestSchema'
              responses:
                "200":
                  description: Cancelamento realizado com sucesso
                "400":
                  description: bad input parameter
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${dataEventFromStrava.Arn}/invocations
        components:
          securitySchemes:
            authorizer:
              type: apiKey
              name: x-api-key
              in: header
          schemas:
            4xxErrorSchema:
              type: object
              properties:
                message:
                  type: string
                error_code:
                  type: integer
            BankBilletSchema:
              type: object
              properties:
                customer:
                  $ref: '#/components/schemas/CustomerSchema'
                fee_amount:
                  type: number
                  format: double
                amount:
                  type: number
                  format: double
                due_date:
                  type: string
                  format: date
                our_number:
                  type: string
                  readOnly: true
                digitable_line:
                  type: string
                  readOnly: true
                bar_code:
                  type: string
                  readOnly: true
                issue_date:
                  type: string
                  format: date
                  readOnly: true
            CustomerSchema:
              type: object
              properties:
                name:
                  type: string
                tax_id:
                  type: string
                address:
                  $ref: '#/components/schemas/AddressSchema'
            AddressSchema:
              type: object
              properties:
                street_address:
                  type: string
                zip_code:
                  type: string
                city:
                  type: string
                distirct:
                  type: string
                state:
                  type: string
            ClaimSchema:
              type: object
              properties:
                key:
                  type: string
                keyType:
                  type: string
                type:
                  type: string
                account:
                  type: object
                  properties:
                    participant:
                      type: string
                    branch:
                      type: string
                    id:
                      type: integer
                    accountType:
                      type: string
                    openingDate:
                      type: string
                person:
                  type: object
                  properties:
                    taxIdNumber:
                      type: string
                    name:
                      type: string
                    tradeName:
                      type: string
                    type:
                      type: string
            ClaimCancelSchema:
              type: object
              properties:
                claim:
                  type: object
                  properties:
                    id:
                      type: string
                reason_type:
                  type: object
                  properties:
                    id: 
                      type: integer
                    name: 
                      type: string
            ClaimCompleteSchema:
              type: object
              properties:
                claim:
                  type: object
                  properties:
                    id:
                      type: string
                request_id:
                  type: string
            ClaimAcknowledgeSchema:
              type: object
              properties:
                claim:
                  type: object
                  properties:
                    id:
                      type: string
                reason_type:
                  type: object
                  properties:
                     id:
                        type: integer
                     name:
                        type: string
            ClaimConfirmSchema:
              type: object
              properties:
                claim:
                  type: object
                  properties:
                    id:
                      type: string
                reason_type:
                  type: object
                  properties:
                     id:
                        type: integer
                     name:
                        type: string
            UpdateTransactionKeySchema:
              type: object
              properties:
                account:
                  $ref: '#/components/schemas/AccountSchema'
                motive:
                  type: string
            AccountSchema:
              type: object
              properties:
                id:
                  type: string
                participant:
                  type: string
                branch:
                  type: string
                type:
                  type: string
                creation_date:
                  type: string
            CidFileSchema:
              type: object
              properties:
                participant:
                  type: integer
                key:
                  type: object
                  properties:
                    cidtype:
                      type: object
                      properties:
                        id: long
                        name: string
            InfractionReportRequestSchema:
              type: object
              properties:
                infractionReport:
                  type: object
                  properties:
                    id:
                      type: string
            InfractionReportCloseRequestSchema:
              type: object
              properties:
                infractionReport:
                  type: object
                  properties:
                    id:
                      type: string
                participant:
                  type: long
                analysisResult:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                analysisDetails:
                  type: string
            InfractionReportCancelRequestSchema:
              type: object
              properties:
                infractionReport:
                  type: object
                  properties:
                    id:
                      type: string
                participant:
                  type: long
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
  activitiesStrava:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  QueueEvents:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: alias/aws/sqs
  exchangeAutorization:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-exchangeAutorization
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: exchangeAutorization
      CodeUri: src/exchangeAutorization
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref athleteAutorization
      Events:
        ApiGETvraceexchangeAutorization:
          Type: Api
          Properties:
            Path: /vrace/exchangeAutorization
            Method: GET
            RestApiId: !Ref Api
      Environment:
        Variables:
          TB_ACTIVITIES: !Ref athleteAutorization
          TB_ACTIVITIES_ARN: !GetAtt athleteAutorization.Arn
          C_ID: '54496'
          C_SC: da573e0f74693df6b74a31a5e5ca20ad289e2025
  athleteAutorization:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  getActivity:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-getActivity
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: getActivity
      CodeUri: src/getActivity
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref activitiesStrava
        - DynamoDBCrudPolicy:
            TableName: !Ref athleteAutorization
      Environment:
        Variables:
          TB_ACTIVITIES: !Ref activitiesStrava
          TB_ACTIVITIES_ARN: !GetAtt activitiesStrava.Arn
          TB_ATHLETE_AUT: !Ref athleteAutorization
          TB_ATHLETE_AUT_ARN: !GetAtt athleteAutorization.Arn
      Events:
        QueueEvents:
          Type: SQS
          Properties:
            Queue: !GetAtt QueueEvents.Arn
            BatchSize: 1
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)